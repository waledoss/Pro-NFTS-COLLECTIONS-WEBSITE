/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link GeoBackupPolicyName} that the service accepts. */
export var KnownGeoBackupPolicyName;
(function (KnownGeoBackupPolicyName) {
    KnownGeoBackupPolicyName["Default"] = "Default";
})(KnownGeoBackupPolicyName || (KnownGeoBackupPolicyName = {}));
/** Known values of {@link UnitType} that the service accepts. */
export var KnownUnitType;
(function (KnownUnitType) {
    KnownUnitType["Count"] = "count";
    KnownUnitType["Bytes"] = "bytes";
    KnownUnitType["Seconds"] = "seconds";
    KnownUnitType["Percent"] = "percent";
    KnownUnitType["CountPerSecond"] = "countPerSecond";
    KnownUnitType["BytesPerSecond"] = "bytesPerSecond";
})(KnownUnitType || (KnownUnitType = {}));
/** Known values of {@link PrimaryAggregationType} that the service accepts. */
export var KnownPrimaryAggregationType;
(function (KnownPrimaryAggregationType) {
    KnownPrimaryAggregationType["None"] = "None";
    KnownPrimaryAggregationType["Average"] = "Average";
    KnownPrimaryAggregationType["Count"] = "Count";
    KnownPrimaryAggregationType["Minimum"] = "Minimum";
    KnownPrimaryAggregationType["Maximum"] = "Maximum";
    KnownPrimaryAggregationType["Total"] = "Total";
})(KnownPrimaryAggregationType || (KnownPrimaryAggregationType = {}));
/** Known values of {@link UnitDefinitionType} that the service accepts. */
export var KnownUnitDefinitionType;
(function (KnownUnitDefinitionType) {
    KnownUnitDefinitionType["Count"] = "Count";
    KnownUnitDefinitionType["Bytes"] = "Bytes";
    KnownUnitDefinitionType["Seconds"] = "Seconds";
    KnownUnitDefinitionType["Percent"] = "Percent";
    KnownUnitDefinitionType["CountPerSecond"] = "CountPerSecond";
    KnownUnitDefinitionType["BytesPerSecond"] = "BytesPerSecond";
})(KnownUnitDefinitionType || (KnownUnitDefinitionType = {}));
/** Known values of {@link RecommendedActionCurrentState} that the service accepts. */
export var KnownRecommendedActionCurrentState;
(function (KnownRecommendedActionCurrentState) {
    KnownRecommendedActionCurrentState["Active"] = "Active";
    KnownRecommendedActionCurrentState["Pending"] = "Pending";
    KnownRecommendedActionCurrentState["Executing"] = "Executing";
    KnownRecommendedActionCurrentState["Verifying"] = "Verifying";
    KnownRecommendedActionCurrentState["PendingRevert"] = "PendingRevert";
    KnownRecommendedActionCurrentState["RevertCancelled"] = "RevertCancelled";
    KnownRecommendedActionCurrentState["Reverting"] = "Reverting";
    KnownRecommendedActionCurrentState["Reverted"] = "Reverted";
    KnownRecommendedActionCurrentState["Ignored"] = "Ignored";
    KnownRecommendedActionCurrentState["Expired"] = "Expired";
    KnownRecommendedActionCurrentState["Monitoring"] = "Monitoring";
    KnownRecommendedActionCurrentState["Resolved"] = "Resolved";
    KnownRecommendedActionCurrentState["Success"] = "Success";
    KnownRecommendedActionCurrentState["Error"] = "Error";
})(KnownRecommendedActionCurrentState || (KnownRecommendedActionCurrentState = {}));
/** Known values of {@link ColumnDataType} that the service accepts. */
export var KnownColumnDataType;
(function (KnownColumnDataType) {
    KnownColumnDataType["Image"] = "image";
    KnownColumnDataType["Text"] = "text";
    KnownColumnDataType["Uniqueidentifier"] = "uniqueidentifier";
    KnownColumnDataType["Date"] = "date";
    KnownColumnDataType["Time"] = "time";
    KnownColumnDataType["Datetime2"] = "datetime2";
    KnownColumnDataType["Datetimeoffset"] = "datetimeoffset";
    KnownColumnDataType["Tinyint"] = "tinyint";
    KnownColumnDataType["Smallint"] = "smallint";
    KnownColumnDataType["Int"] = "int";
    KnownColumnDataType["Smalldatetime"] = "smalldatetime";
    KnownColumnDataType["Real"] = "real";
    KnownColumnDataType["Money"] = "money";
    KnownColumnDataType["Datetime"] = "datetime";
    KnownColumnDataType["Float"] = "float";
    KnownColumnDataType["SqlVariant"] = "sql_variant";
    KnownColumnDataType["Ntext"] = "ntext";
    KnownColumnDataType["Bit"] = "bit";
    KnownColumnDataType["Decimal"] = "decimal";
    KnownColumnDataType["Numeric"] = "numeric";
    KnownColumnDataType["Smallmoney"] = "smallmoney";
    KnownColumnDataType["Bigint"] = "bigint";
    KnownColumnDataType["Hierarchyid"] = "hierarchyid";
    KnownColumnDataType["Geometry"] = "geometry";
    KnownColumnDataType["Geography"] = "geography";
    KnownColumnDataType["Varbinary"] = "varbinary";
    KnownColumnDataType["Varchar"] = "varchar";
    KnownColumnDataType["Binary"] = "binary";
    KnownColumnDataType["Char"] = "char";
    KnownColumnDataType["Timestamp"] = "timestamp";
    KnownColumnDataType["Nvarchar"] = "nvarchar";
    KnownColumnDataType["Nchar"] = "nchar";
    KnownColumnDataType["Xml"] = "xml";
    KnownColumnDataType["Sysname"] = "sysname";
})(KnownColumnDataType || (KnownColumnDataType = {}));
/** Known values of {@link TableTemporalType} that the service accepts. */
export var KnownTableTemporalType;
(function (KnownTableTemporalType) {
    KnownTableTemporalType["NonTemporalTable"] = "NonTemporalTable";
    KnownTableTemporalType["HistoryTable"] = "HistoryTable";
    KnownTableTemporalType["SystemVersionedTemporalTable"] = "SystemVersionedTemporalTable";
})(KnownTableTemporalType || (KnownTableTemporalType = {}));
/** Known values of {@link SecurityAlertPolicyName} that the service accepts. */
export var KnownSecurityAlertPolicyName;
(function (KnownSecurityAlertPolicyName) {
    KnownSecurityAlertPolicyName["Default"] = "Default";
})(KnownSecurityAlertPolicyName || (KnownSecurityAlertPolicyName = {}));
/** Known values of {@link CreatedByType} that the service accepts. */
export var KnownCreatedByType;
(function (KnownCreatedByType) {
    KnownCreatedByType["User"] = "User";
    KnownCreatedByType["Application"] = "Application";
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (KnownCreatedByType = {}));
/** Known values of {@link VulnerabilityAssessmentName} that the service accepts. */
export var KnownVulnerabilityAssessmentName;
(function (KnownVulnerabilityAssessmentName) {
    KnownVulnerabilityAssessmentName["Default"] = "default";
})(KnownVulnerabilityAssessmentName || (KnownVulnerabilityAssessmentName = {}));
/** Known values of {@link VulnerabilityAssessmentScanTriggerType} that the service accepts. */
export var KnownVulnerabilityAssessmentScanTriggerType;
(function (KnownVulnerabilityAssessmentScanTriggerType) {
    KnownVulnerabilityAssessmentScanTriggerType["OnDemand"] = "OnDemand";
    KnownVulnerabilityAssessmentScanTriggerType["Recurring"] = "Recurring";
})(KnownVulnerabilityAssessmentScanTriggerType || (KnownVulnerabilityAssessmentScanTriggerType = {}));
/** Known values of {@link VulnerabilityAssessmentScanState} that the service accepts. */
export var KnownVulnerabilityAssessmentScanState;
(function (KnownVulnerabilityAssessmentScanState) {
    KnownVulnerabilityAssessmentScanState["Passed"] = "Passed";
    KnownVulnerabilityAssessmentScanState["Failed"] = "Failed";
    KnownVulnerabilityAssessmentScanState["FailedToRun"] = "FailedToRun";
    KnownVulnerabilityAssessmentScanState["InProgress"] = "InProgress";
})(KnownVulnerabilityAssessmentScanState || (KnownVulnerabilityAssessmentScanState = {}));
/** Known values of {@link DataWarehouseUserActivityName} that the service accepts. */
export var KnownDataWarehouseUserActivityName;
(function (KnownDataWarehouseUserActivityName) {
    KnownDataWarehouseUserActivityName["Current"] = "current";
})(KnownDataWarehouseUserActivityName || (KnownDataWarehouseUserActivityName = {}));
/** Known values of {@link ElasticPoolState} that the service accepts. */
export var KnownElasticPoolState;
(function (KnownElasticPoolState) {
    KnownElasticPoolState["Creating"] = "Creating";
    KnownElasticPoolState["Ready"] = "Ready";
    KnownElasticPoolState["Disabled"] = "Disabled";
})(KnownElasticPoolState || (KnownElasticPoolState = {}));
/** Known values of {@link ElasticPoolLicenseType} that the service accepts. */
export var KnownElasticPoolLicenseType;
(function (KnownElasticPoolLicenseType) {
    KnownElasticPoolLicenseType["LicenseIncluded"] = "LicenseIncluded";
    KnownElasticPoolLicenseType["BasePrice"] = "BasePrice";
})(KnownElasticPoolLicenseType || (KnownElasticPoolLicenseType = {}));
/** Known values of {@link ServerKeyType} that the service accepts. */
export var KnownServerKeyType;
(function (KnownServerKeyType) {
    KnownServerKeyType["ServiceManaged"] = "ServiceManaged";
    KnownServerKeyType["AzureKeyVault"] = "AzureKeyVault";
})(KnownServerKeyType || (KnownServerKeyType = {}));
/** Known values of {@link EncryptionProtectorName} that the service accepts. */
export var KnownEncryptionProtectorName;
(function (KnownEncryptionProtectorName) {
    KnownEncryptionProtectorName["Current"] = "current";
})(KnownEncryptionProtectorName || (KnownEncryptionProtectorName = {}));
/** Known values of {@link ReadWriteEndpointFailoverPolicy} that the service accepts. */
export var KnownReadWriteEndpointFailoverPolicy;
(function (KnownReadWriteEndpointFailoverPolicy) {
    KnownReadWriteEndpointFailoverPolicy["Manual"] = "Manual";
    KnownReadWriteEndpointFailoverPolicy["Automatic"] = "Automatic";
})(KnownReadWriteEndpointFailoverPolicy || (KnownReadWriteEndpointFailoverPolicy = {}));
/** Known values of {@link ReadOnlyEndpointFailoverPolicy} that the service accepts. */
export var KnownReadOnlyEndpointFailoverPolicy;
(function (KnownReadOnlyEndpointFailoverPolicy) {
    KnownReadOnlyEndpointFailoverPolicy["Disabled"] = "Disabled";
    KnownReadOnlyEndpointFailoverPolicy["Enabled"] = "Enabled";
})(KnownReadOnlyEndpointFailoverPolicy || (KnownReadOnlyEndpointFailoverPolicy = {}));
/** Known values of {@link FailoverGroupReplicationRole} that the service accepts. */
export var KnownFailoverGroupReplicationRole;
(function (KnownFailoverGroupReplicationRole) {
    KnownFailoverGroupReplicationRole["Primary"] = "Primary";
    KnownFailoverGroupReplicationRole["Secondary"] = "Secondary";
})(KnownFailoverGroupReplicationRole || (KnownFailoverGroupReplicationRole = {}));
/** Known values of {@link InstanceFailoverGroupReplicationRole} that the service accepts. */
export var KnownInstanceFailoverGroupReplicationRole;
(function (KnownInstanceFailoverGroupReplicationRole) {
    KnownInstanceFailoverGroupReplicationRole["Primary"] = "Primary";
    KnownInstanceFailoverGroupReplicationRole["Secondary"] = "Secondary";
})(KnownInstanceFailoverGroupReplicationRole || (KnownInstanceFailoverGroupReplicationRole = {}));
/** Known values of {@link InstancePoolLicenseType} that the service accepts. */
export var KnownInstancePoolLicenseType;
(function (KnownInstancePoolLicenseType) {
    KnownInstancePoolLicenseType["LicenseIncluded"] = "LicenseIncluded";
    KnownInstancePoolLicenseType["BasePrice"] = "BasePrice";
})(KnownInstancePoolLicenseType || (KnownInstancePoolLicenseType = {}));
/** Known values of {@link JobAgentState} that the service accepts. */
export var KnownJobAgentState;
(function (KnownJobAgentState) {
    KnownJobAgentState["Creating"] = "Creating";
    KnownJobAgentState["Ready"] = "Ready";
    KnownJobAgentState["Updating"] = "Updating";
    KnownJobAgentState["Deleting"] = "Deleting";
    KnownJobAgentState["Disabled"] = "Disabled";
})(KnownJobAgentState || (KnownJobAgentState = {}));
/** Known values of {@link JobExecutionLifecycle} that the service accepts. */
export var KnownJobExecutionLifecycle;
(function (KnownJobExecutionLifecycle) {
    KnownJobExecutionLifecycle["Created"] = "Created";
    KnownJobExecutionLifecycle["InProgress"] = "InProgress";
    KnownJobExecutionLifecycle["WaitingForChildJobExecutions"] = "WaitingForChildJobExecutions";
    KnownJobExecutionLifecycle["WaitingForRetry"] = "WaitingForRetry";
    KnownJobExecutionLifecycle["Succeeded"] = "Succeeded";
    KnownJobExecutionLifecycle["SucceededWithSkipped"] = "SucceededWithSkipped";
    KnownJobExecutionLifecycle["Failed"] = "Failed";
    KnownJobExecutionLifecycle["TimedOut"] = "TimedOut";
    KnownJobExecutionLifecycle["Canceled"] = "Canceled";
    KnownJobExecutionLifecycle["Skipped"] = "Skipped";
})(KnownJobExecutionLifecycle || (KnownJobExecutionLifecycle = {}));
/** Known values of {@link ProvisioningState} that the service accepts. */
export var KnownProvisioningState;
(function (KnownProvisioningState) {
    KnownProvisioningState["Created"] = "Created";
    KnownProvisioningState["InProgress"] = "InProgress";
    KnownProvisioningState["Succeeded"] = "Succeeded";
    KnownProvisioningState["Failed"] = "Failed";
    KnownProvisioningState["Canceled"] = "Canceled";
})(KnownProvisioningState || (KnownProvisioningState = {}));
/** Known values of {@link JobTargetType} that the service accepts. */
export var KnownJobTargetType;
(function (KnownJobTargetType) {
    KnownJobTargetType["TargetGroup"] = "TargetGroup";
    KnownJobTargetType["SqlDatabase"] = "SqlDatabase";
    KnownJobTargetType["SqlElasticPool"] = "SqlElasticPool";
    KnownJobTargetType["SqlShardMap"] = "SqlShardMap";
    KnownJobTargetType["SqlServer"] = "SqlServer";
})(KnownJobTargetType || (KnownJobTargetType = {}));
/** Known values of {@link JobStepActionType} that the service accepts. */
export var KnownJobStepActionType;
(function (KnownJobStepActionType) {
    KnownJobStepActionType["TSql"] = "TSql";
})(KnownJobStepActionType || (KnownJobStepActionType = {}));
/** Known values of {@link JobStepActionSource} that the service accepts. */
export var KnownJobStepActionSource;
(function (KnownJobStepActionSource) {
    KnownJobStepActionSource["Inline"] = "Inline";
})(KnownJobStepActionSource || (KnownJobStepActionSource = {}));
/** Known values of {@link JobStepOutputType} that the service accepts. */
export var KnownJobStepOutputType;
(function (KnownJobStepOutputType) {
    KnownJobStepOutputType["SqlDatabase"] = "SqlDatabase";
})(KnownJobStepOutputType || (KnownJobStepOutputType = {}));
/** Known values of {@link CapabilityGroup} that the service accepts. */
export var KnownCapabilityGroup;
(function (KnownCapabilityGroup) {
    KnownCapabilityGroup["SupportedEditions"] = "supportedEditions";
    KnownCapabilityGroup["SupportedElasticPoolEditions"] = "supportedElasticPoolEditions";
    KnownCapabilityGroup["SupportedManagedInstanceVersions"] = "supportedManagedInstanceVersions";
    KnownCapabilityGroup["SupportedInstancePoolEditions"] = "supportedInstancePoolEditions";
    KnownCapabilityGroup["SupportedManagedInstanceEditions"] = "supportedManagedInstanceEditions";
})(KnownCapabilityGroup || (KnownCapabilityGroup = {}));
/** Known values of {@link MaxSizeUnit} that the service accepts. */
export var KnownMaxSizeUnit;
(function (KnownMaxSizeUnit) {
    KnownMaxSizeUnit["Megabytes"] = "Megabytes";
    KnownMaxSizeUnit["Gigabytes"] = "Gigabytes";
    KnownMaxSizeUnit["Terabytes"] = "Terabytes";
    KnownMaxSizeUnit["Petabytes"] = "Petabytes";
})(KnownMaxSizeUnit || (KnownMaxSizeUnit = {}));
/** Known values of {@link LogSizeUnit} that the service accepts. */
export var KnownLogSizeUnit;
(function (KnownLogSizeUnit) {
    KnownLogSizeUnit["Megabytes"] = "Megabytes";
    KnownLogSizeUnit["Gigabytes"] = "Gigabytes";
    KnownLogSizeUnit["Terabytes"] = "Terabytes";
    KnownLogSizeUnit["Petabytes"] = "Petabytes";
    KnownLogSizeUnit["Percent"] = "Percent";
})(KnownLogSizeUnit || (KnownLogSizeUnit = {}));
/** Known values of {@link PerformanceLevelUnit} that the service accepts. */
export var KnownPerformanceLevelUnit;
(function (KnownPerformanceLevelUnit) {
    KnownPerformanceLevelUnit["DTU"] = "DTU";
    KnownPerformanceLevelUnit["VCores"] = "VCores";
})(KnownPerformanceLevelUnit || (KnownPerformanceLevelUnit = {}));
/** Known values of {@link PauseDelayTimeUnit} that the service accepts. */
export var KnownPauseDelayTimeUnit;
(function (KnownPauseDelayTimeUnit) {
    KnownPauseDelayTimeUnit["Minutes"] = "Minutes";
})(KnownPauseDelayTimeUnit || (KnownPauseDelayTimeUnit = {}));
/** Known values of {@link StorageCapabilityStorageAccountType} that the service accepts. */
export var KnownStorageCapabilityStorageAccountType;
(function (KnownStorageCapabilityStorageAccountType) {
    KnownStorageCapabilityStorageAccountType["GRS"] = "GRS";
    KnownStorageCapabilityStorageAccountType["LRS"] = "LRS";
    KnownStorageCapabilityStorageAccountType["ZRS"] = "ZRS";
})(KnownStorageCapabilityStorageAccountType || (KnownStorageCapabilityStorageAccountType = {}));
/** Known values of {@link LongTermRetentionPolicyName} that the service accepts. */
export var KnownLongTermRetentionPolicyName;
(function (KnownLongTermRetentionPolicyName) {
    KnownLongTermRetentionPolicyName["Default"] = "default";
})(KnownLongTermRetentionPolicyName || (KnownLongTermRetentionPolicyName = {}));
/** Known values of {@link DayOfWeek} that the service accepts. */
export var KnownDayOfWeek;
(function (KnownDayOfWeek) {
    KnownDayOfWeek["Sunday"] = "Sunday";
    KnownDayOfWeek["Monday"] = "Monday";
    KnownDayOfWeek["Tuesday"] = "Tuesday";
    KnownDayOfWeek["Wednesday"] = "Wednesday";
    KnownDayOfWeek["Thursday"] = "Thursday";
    KnownDayOfWeek["Friday"] = "Friday";
    KnownDayOfWeek["Saturday"] = "Saturday";
})(KnownDayOfWeek || (KnownDayOfWeek = {}));
/** Known values of {@link ManagedShortTermRetentionPolicyName} that the service accepts. */
export var KnownManagedShortTermRetentionPolicyName;
(function (KnownManagedShortTermRetentionPolicyName) {
    KnownManagedShortTermRetentionPolicyName["Default"] = "default";
})(KnownManagedShortTermRetentionPolicyName || (KnownManagedShortTermRetentionPolicyName = {}));
/** Known values of {@link QueryTimeGrainType} that the service accepts. */
export var KnownQueryTimeGrainType;
(function (KnownQueryTimeGrainType) {
    KnownQueryTimeGrainType["PT1H"] = "PT1H";
    KnownQueryTimeGrainType["P1D"] = "P1D";
})(KnownQueryTimeGrainType || (KnownQueryTimeGrainType = {}));
/** Known values of {@link QueryMetricUnitType} that the service accepts. */
export var KnownQueryMetricUnitType;
(function (KnownQueryMetricUnitType) {
    KnownQueryMetricUnitType["Percentage"] = "percentage";
    KnownQueryMetricUnitType["KB"] = "KB";
    KnownQueryMetricUnitType["Microseconds"] = "microseconds";
    KnownQueryMetricUnitType["Count"] = "count";
})(KnownQueryMetricUnitType || (KnownQueryMetricUnitType = {}));
/** Known values of {@link RestoreDetailsName} that the service accepts. */
export var KnownRestoreDetailsName;
(function (KnownRestoreDetailsName) {
    KnownRestoreDetailsName["Default"] = "Default";
})(KnownRestoreDetailsName || (KnownRestoreDetailsName = {}));
/** Known values of {@link ManagedDatabaseStatus} that the service accepts. */
export var KnownManagedDatabaseStatus;
(function (KnownManagedDatabaseStatus) {
    KnownManagedDatabaseStatus["Online"] = "Online";
    KnownManagedDatabaseStatus["Offline"] = "Offline";
    KnownManagedDatabaseStatus["Shutdown"] = "Shutdown";
    KnownManagedDatabaseStatus["Creating"] = "Creating";
    KnownManagedDatabaseStatus["Inaccessible"] = "Inaccessible";
    KnownManagedDatabaseStatus["Restoring"] = "Restoring";
    KnownManagedDatabaseStatus["Updating"] = "Updating";
})(KnownManagedDatabaseStatus || (KnownManagedDatabaseStatus = {}));
/** Known values of {@link CatalogCollationType} that the service accepts. */
export var KnownCatalogCollationType;
(function (KnownCatalogCollationType) {
    KnownCatalogCollationType["DatabaseDefault"] = "DATABASE_DEFAULT";
    KnownCatalogCollationType["SQLLatin1GeneralCP1CIAS"] = "SQL_Latin1_General_CP1_CI_AS";
})(KnownCatalogCollationType || (KnownCatalogCollationType = {}));
/** Known values of {@link ManagedDatabaseCreateMode} that the service accepts. */
export var KnownManagedDatabaseCreateMode;
(function (KnownManagedDatabaseCreateMode) {
    KnownManagedDatabaseCreateMode["Default"] = "Default";
    KnownManagedDatabaseCreateMode["RestoreExternalBackup"] = "RestoreExternalBackup";
    KnownManagedDatabaseCreateMode["PointInTimeRestore"] = "PointInTimeRestore";
    KnownManagedDatabaseCreateMode["Recovery"] = "Recovery";
    KnownManagedDatabaseCreateMode["RestoreLongTermRetentionBackup"] = "RestoreLongTermRetentionBackup";
})(KnownManagedDatabaseCreateMode || (KnownManagedDatabaseCreateMode = {}));
/** Known values of {@link TransparentDataEncryptionName} that the service accepts. */
export var KnownTransparentDataEncryptionName;
(function (KnownTransparentDataEncryptionName) {
    KnownTransparentDataEncryptionName["Current"] = "current";
})(KnownTransparentDataEncryptionName || (KnownTransparentDataEncryptionName = {}));
/** Known values of {@link ManagedInstanceAdministratorType} that the service accepts. */
export var KnownManagedInstanceAdministratorType;
(function (KnownManagedInstanceAdministratorType) {
    KnownManagedInstanceAdministratorType["ActiveDirectory"] = "ActiveDirectory";
})(KnownManagedInstanceAdministratorType || (KnownManagedInstanceAdministratorType = {}));
/** Known values of {@link AdministratorName} that the service accepts. */
export var KnownAdministratorName;
(function (KnownAdministratorName) {
    KnownAdministratorName["ActiveDirectory"] = "ActiveDirectory";
})(KnownAdministratorName || (KnownAdministratorName = {}));
/** Known values of {@link AuthenticationName} that the service accepts. */
export var KnownAuthenticationName;
(function (KnownAuthenticationName) {
    KnownAuthenticationName["Default"] = "Default";
})(KnownAuthenticationName || (KnownAuthenticationName = {}));
/** Known values of {@link ManagedInstanceLongTermRetentionPolicyName} that the service accepts. */
export var KnownManagedInstanceLongTermRetentionPolicyName;
(function (KnownManagedInstanceLongTermRetentionPolicyName) {
    KnownManagedInstanceLongTermRetentionPolicyName["Default"] = "default";
})(KnownManagedInstanceLongTermRetentionPolicyName || (KnownManagedInstanceLongTermRetentionPolicyName = {}));
/** Known values of {@link ManagementOperationState} that the service accepts. */
export var KnownManagementOperationState;
(function (KnownManagementOperationState) {
    KnownManagementOperationState["Pending"] = "Pending";
    KnownManagementOperationState["InProgress"] = "InProgress";
    KnownManagementOperationState["Succeeded"] = "Succeeded";
    KnownManagementOperationState["Failed"] = "Failed";
    KnownManagementOperationState["CancelInProgress"] = "CancelInProgress";
    KnownManagementOperationState["Cancelled"] = "Cancelled";
})(KnownManagementOperationState || (KnownManagementOperationState = {}));
/** Known values of {@link UpsertManagedServerOperationStepStatus} that the service accepts. */
export var KnownUpsertManagedServerOperationStepStatus;
(function (KnownUpsertManagedServerOperationStepStatus) {
    KnownUpsertManagedServerOperationStepStatus["NotStarted"] = "NotStarted";
    KnownUpsertManagedServerOperationStepStatus["InProgress"] = "InProgress";
    KnownUpsertManagedServerOperationStepStatus["SlowedDown"] = "SlowedDown";
    KnownUpsertManagedServerOperationStepStatus["Completed"] = "Completed";
    KnownUpsertManagedServerOperationStepStatus["Failed"] = "Failed";
    KnownUpsertManagedServerOperationStepStatus["Canceled"] = "Canceled";
})(KnownUpsertManagedServerOperationStepStatus || (KnownUpsertManagedServerOperationStepStatus = {}));
/** Known values of {@link OperationOrigin} that the service accepts. */
export var KnownOperationOrigin;
(function (KnownOperationOrigin) {
    KnownOperationOrigin["User"] = "user";
    KnownOperationOrigin["System"] = "system";
})(KnownOperationOrigin || (KnownOperationOrigin = {}));
/** Known values of {@link PrivateLinkServiceConnectionStateStatus} that the service accepts. */
export var KnownPrivateLinkServiceConnectionStateStatus;
(function (KnownPrivateLinkServiceConnectionStateStatus) {
    KnownPrivateLinkServiceConnectionStateStatus["Approved"] = "Approved";
    KnownPrivateLinkServiceConnectionStateStatus["Pending"] = "Pending";
    KnownPrivateLinkServiceConnectionStateStatus["Rejected"] = "Rejected";
    KnownPrivateLinkServiceConnectionStateStatus["Disconnected"] = "Disconnected";
})(KnownPrivateLinkServiceConnectionStateStatus || (KnownPrivateLinkServiceConnectionStateStatus = {}));
/** Known values of {@link PrivateLinkServiceConnectionStateActionsRequire} that the service accepts. */
export var KnownPrivateLinkServiceConnectionStateActionsRequire;
(function (KnownPrivateLinkServiceConnectionStateActionsRequire) {
    KnownPrivateLinkServiceConnectionStateActionsRequire["None"] = "None";
})(KnownPrivateLinkServiceConnectionStateActionsRequire || (KnownPrivateLinkServiceConnectionStateActionsRequire = {}));
/** Known values of {@link PrivateEndpointProvisioningState} that the service accepts. */
export var KnownPrivateEndpointProvisioningState;
(function (KnownPrivateEndpointProvisioningState) {
    KnownPrivateEndpointProvisioningState["Approving"] = "Approving";
    KnownPrivateEndpointProvisioningState["Ready"] = "Ready";
    KnownPrivateEndpointProvisioningState["Dropping"] = "Dropping";
    KnownPrivateEndpointProvisioningState["Failed"] = "Failed";
    KnownPrivateEndpointProvisioningState["Rejecting"] = "Rejecting";
})(KnownPrivateEndpointProvisioningState || (KnownPrivateEndpointProvisioningState = {}));
/** Known values of {@link AdministratorType} that the service accepts. */
export var KnownAdministratorType;
(function (KnownAdministratorType) {
    KnownAdministratorType["ActiveDirectory"] = "ActiveDirectory";
})(KnownAdministratorType || (KnownAdministratorType = {}));
/** Known values of {@link ServerTrustGroupPropertiesTrustScopesItem} that the service accepts. */
export var KnownServerTrustGroupPropertiesTrustScopesItem;
(function (KnownServerTrustGroupPropertiesTrustScopesItem) {
    KnownServerTrustGroupPropertiesTrustScopesItem["GlobalTransactions"] = "GlobalTransactions";
    KnownServerTrustGroupPropertiesTrustScopesItem["ServiceBroker"] = "ServiceBroker";
})(KnownServerTrustGroupPropertiesTrustScopesItem || (KnownServerTrustGroupPropertiesTrustScopesItem = {}));
/** Known values of {@link SqlAgentConfigurationPropertiesState} that the service accepts. */
export var KnownSqlAgentConfigurationPropertiesState;
(function (KnownSqlAgentConfigurationPropertiesState) {
    KnownSqlAgentConfigurationPropertiesState["Enabled"] = "Enabled";
    KnownSqlAgentConfigurationPropertiesState["Disabled"] = "Disabled";
})(KnownSqlAgentConfigurationPropertiesState || (KnownSqlAgentConfigurationPropertiesState = {}));
/** Known values of {@link SyncAgentState} that the service accepts. */
export var KnownSyncAgentState;
(function (KnownSyncAgentState) {
    KnownSyncAgentState["Online"] = "Online";
    KnownSyncAgentState["Offline"] = "Offline";
    KnownSyncAgentState["NeverConnected"] = "NeverConnected";
})(KnownSyncAgentState || (KnownSyncAgentState = {}));
/** Known values of {@link SyncMemberDbType} that the service accepts. */
export var KnownSyncMemberDbType;
(function (KnownSyncMemberDbType) {
    KnownSyncMemberDbType["AzureSqlDatabase"] = "AzureSqlDatabase";
    KnownSyncMemberDbType["SqlServerDatabase"] = "SqlServerDatabase";
})(KnownSyncMemberDbType || (KnownSyncMemberDbType = {}));
/** Known values of {@link Enum60} that the service accepts. */
export var KnownEnum60;
(function (KnownEnum60) {
    KnownEnum60["All"] = "All";
    KnownEnum60["Error"] = "Error";
    KnownEnum60["Warning"] = "Warning";
    KnownEnum60["Success"] = "Success";
})(KnownEnum60 || (KnownEnum60 = {}));
/** Known values of {@link SyncGroupLogType} that the service accepts. */
export var KnownSyncGroupLogType;
(function (KnownSyncGroupLogType) {
    KnownSyncGroupLogType["All"] = "All";
    KnownSyncGroupLogType["Error"] = "Error";
    KnownSyncGroupLogType["Warning"] = "Warning";
    KnownSyncGroupLogType["Success"] = "Success";
})(KnownSyncGroupLogType || (KnownSyncGroupLogType = {}));
/** Known values of {@link SyncConflictResolutionPolicy} that the service accepts. */
export var KnownSyncConflictResolutionPolicy;
(function (KnownSyncConflictResolutionPolicy) {
    KnownSyncConflictResolutionPolicy["HubWin"] = "HubWin";
    KnownSyncConflictResolutionPolicy["MemberWin"] = "MemberWin";
})(KnownSyncConflictResolutionPolicy || (KnownSyncConflictResolutionPolicy = {}));
/** Known values of {@link SyncGroupState} that the service accepts. */
export var KnownSyncGroupState;
(function (KnownSyncGroupState) {
    KnownSyncGroupState["NotReady"] = "NotReady";
    KnownSyncGroupState["Error"] = "Error";
    KnownSyncGroupState["Warning"] = "Warning";
    KnownSyncGroupState["Progressing"] = "Progressing";
    KnownSyncGroupState["Good"] = "Good";
})(KnownSyncGroupState || (KnownSyncGroupState = {}));
/** Known values of {@link SyncDirection} that the service accepts. */
export var KnownSyncDirection;
(function (KnownSyncDirection) {
    KnownSyncDirection["Bidirectional"] = "Bidirectional";
    KnownSyncDirection["OneWayMemberToHub"] = "OneWayMemberToHub";
    KnownSyncDirection["OneWayHubToMember"] = "OneWayHubToMember";
})(KnownSyncDirection || (KnownSyncDirection = {}));
/** Known values of {@link SyncMemberState} that the service accepts. */
export var KnownSyncMemberState;
(function (KnownSyncMemberState) {
    KnownSyncMemberState["SyncInProgress"] = "SyncInProgress";
    KnownSyncMemberState["SyncSucceeded"] = "SyncSucceeded";
    KnownSyncMemberState["SyncFailed"] = "SyncFailed";
    KnownSyncMemberState["DisabledTombstoneCleanup"] = "DisabledTombstoneCleanup";
    KnownSyncMemberState["DisabledBackupRestore"] = "DisabledBackupRestore";
    KnownSyncMemberState["SyncSucceededWithWarnings"] = "SyncSucceededWithWarnings";
    KnownSyncMemberState["SyncCancelling"] = "SyncCancelling";
    KnownSyncMemberState["SyncCancelled"] = "SyncCancelled";
    KnownSyncMemberState["UnProvisioned"] = "UnProvisioned";
    KnownSyncMemberState["Provisioning"] = "Provisioning";
    KnownSyncMemberState["Provisioned"] = "Provisioned";
    KnownSyncMemberState["ProvisionFailed"] = "ProvisionFailed";
    KnownSyncMemberState["DeProvisioning"] = "DeProvisioning";
    KnownSyncMemberState["DeProvisioned"] = "DeProvisioned";
    KnownSyncMemberState["DeProvisionFailed"] = "DeProvisionFailed";
    KnownSyncMemberState["Reprovisioning"] = "Reprovisioning";
    KnownSyncMemberState["ReprovisionFailed"] = "ReprovisionFailed";
    KnownSyncMemberState["UnReprovisioned"] = "UnReprovisioned";
})(KnownSyncMemberState || (KnownSyncMemberState = {}));
/** Known values of {@link DnsRefreshConfigurationPropertiesStatus} that the service accepts. */
export var KnownDnsRefreshConfigurationPropertiesStatus;
(function (KnownDnsRefreshConfigurationPropertiesStatus) {
    KnownDnsRefreshConfigurationPropertiesStatus["Succeeded"] = "Succeeded";
    KnownDnsRefreshConfigurationPropertiesStatus["Failed"] = "Failed";
})(KnownDnsRefreshConfigurationPropertiesStatus || (KnownDnsRefreshConfigurationPropertiesStatus = {}));
/** Known values of {@link VirtualNetworkRuleState} that the service accepts. */
export var KnownVirtualNetworkRuleState;
(function (KnownVirtualNetworkRuleState) {
    KnownVirtualNetworkRuleState["Initializing"] = "Initializing";
    KnownVirtualNetworkRuleState["InProgress"] = "InProgress";
    KnownVirtualNetworkRuleState["Ready"] = "Ready";
    KnownVirtualNetworkRuleState["Failed"] = "Failed";
    KnownVirtualNetworkRuleState["Deleting"] = "Deleting";
    KnownVirtualNetworkRuleState["Unknown"] = "Unknown";
})(KnownVirtualNetworkRuleState || (KnownVirtualNetworkRuleState = {}));
/** Known values of {@link ShortTermRetentionPolicyName} that the service accepts. */
export var KnownShortTermRetentionPolicyName;
(function (KnownShortTermRetentionPolicyName) {
    KnownShortTermRetentionPolicyName["Default"] = "default";
})(KnownShortTermRetentionPolicyName || (KnownShortTermRetentionPolicyName = {}));
/** Known values of {@link DiffBackupIntervalInHours} that the service accepts. */
export var KnownDiffBackupIntervalInHours;
(function (KnownDiffBackupIntervalInHours) {
    KnownDiffBackupIntervalInHours[KnownDiffBackupIntervalInHours["Twelve"] = 12] = "Twelve";
    KnownDiffBackupIntervalInHours[KnownDiffBackupIntervalInHours["TwentyFour"] = 24] = "TwentyFour";
})(KnownDiffBackupIntervalInHours || (KnownDiffBackupIntervalInHours = {}));
/** Known values of {@link OperationMode} that the service accepts. */
export var KnownOperationMode;
(function (KnownOperationMode) {
    KnownOperationMode["PolybaseImport"] = "PolybaseImport";
})(KnownOperationMode || (KnownOperationMode = {}));
/** Known values of {@link StorageKeyType} that the service accepts. */
export var KnownStorageKeyType;
(function (KnownStorageKeyType) {
    KnownStorageKeyType["SharedAccessKey"] = "SharedAccessKey";
    KnownStorageKeyType["StorageAccessKey"] = "StorageAccessKey";
})(KnownStorageKeyType || (KnownStorageKeyType = {}));
/** Known values of {@link LedgerDigestUploadsName} that the service accepts. */
export var KnownLedgerDigestUploadsName;
(function (KnownLedgerDigestUploadsName) {
    KnownLedgerDigestUploadsName["Current"] = "current";
})(KnownLedgerDigestUploadsName || (KnownLedgerDigestUploadsName = {}));
/** Known values of {@link ReplicationState} that the service accepts. */
export var KnownReplicationState;
(function (KnownReplicationState) {
    KnownReplicationState["Pending"] = "PENDING";
    KnownReplicationState["Seeding"] = "SEEDING";
    KnownReplicationState["CatchUP"] = "CATCH_UP";
    KnownReplicationState["Suspended"] = "SUSPENDED";
})(KnownReplicationState || (KnownReplicationState = {}));
/** Known values of {@link ReplicationLinkType} that the service accepts. */
export var KnownReplicationLinkType;
(function (KnownReplicationLinkType) {
    KnownReplicationLinkType["GEO"] = "GEO";
    KnownReplicationLinkType["Named"] = "NAMED";
})(KnownReplicationLinkType || (KnownReplicationLinkType = {}));
/** Known values of {@link IdentityType} that the service accepts. */
export var KnownIdentityType;
(function (KnownIdentityType) {
    KnownIdentityType["None"] = "None";
    KnownIdentityType["SystemAssigned"] = "SystemAssigned";
    KnownIdentityType["UserAssigned"] = "UserAssigned";
    KnownIdentityType["SystemAssignedUserAssigned"] = "SystemAssigned,UserAssigned";
})(KnownIdentityType || (KnownIdentityType = {}));
/** Known values of {@link ServerNetworkAccessFlag} that the service accepts. */
export var KnownServerNetworkAccessFlag;
(function (KnownServerNetworkAccessFlag) {
    KnownServerNetworkAccessFlag["Enabled"] = "Enabled";
    KnownServerNetworkAccessFlag["Disabled"] = "Disabled";
})(KnownServerNetworkAccessFlag || (KnownServerNetworkAccessFlag = {}));
/** Known values of {@link ServerWorkspaceFeature} that the service accepts. */
export var KnownServerWorkspaceFeature;
(function (KnownServerWorkspaceFeature) {
    KnownServerWorkspaceFeature["Connected"] = "Connected";
    KnownServerWorkspaceFeature["Disconnected"] = "Disconnected";
})(KnownServerWorkspaceFeature || (KnownServerWorkspaceFeature = {}));
/** Known values of {@link PrincipalType} that the service accepts. */
export var KnownPrincipalType;
(function (KnownPrincipalType) {
    KnownPrincipalType["User"] = "User";
    KnownPrincipalType["Group"] = "Group";
    KnownPrincipalType["Application"] = "Application";
})(KnownPrincipalType || (KnownPrincipalType = {}));
/** Known values of {@link DatabaseIdentityType} that the service accepts. */
export var KnownDatabaseIdentityType;
(function (KnownDatabaseIdentityType) {
    KnownDatabaseIdentityType["None"] = "None";
    KnownDatabaseIdentityType["UserAssigned"] = "UserAssigned";
})(KnownDatabaseIdentityType || (KnownDatabaseIdentityType = {}));
/** Known values of {@link CreateMode} that the service accepts. */
export var KnownCreateMode;
(function (KnownCreateMode) {
    KnownCreateMode["Default"] = "Default";
    KnownCreateMode["Copy"] = "Copy";
    KnownCreateMode["Secondary"] = "Secondary";
    KnownCreateMode["PointInTimeRestore"] = "PointInTimeRestore";
    KnownCreateMode["Restore"] = "Restore";
    KnownCreateMode["Recovery"] = "Recovery";
    KnownCreateMode["RestoreExternalBackup"] = "RestoreExternalBackup";
    KnownCreateMode["RestoreExternalBackupSecondary"] = "RestoreExternalBackupSecondary";
    KnownCreateMode["RestoreLongTermRetentionBackup"] = "RestoreLongTermRetentionBackup";
    KnownCreateMode["OnlineSecondary"] = "OnlineSecondary";
})(KnownCreateMode || (KnownCreateMode = {}));
/** Known values of {@link SampleName} that the service accepts. */
export var KnownSampleName;
(function (KnownSampleName) {
    KnownSampleName["AdventureWorksLT"] = "AdventureWorksLT";
    KnownSampleName["WideWorldImportersStd"] = "WideWorldImportersStd";
    KnownSampleName["WideWorldImportersFull"] = "WideWorldImportersFull";
})(KnownSampleName || (KnownSampleName = {}));
/** Known values of {@link DatabaseStatus} that the service accepts. */
export var KnownDatabaseStatus;
(function (KnownDatabaseStatus) {
    KnownDatabaseStatus["Online"] = "Online";
    KnownDatabaseStatus["Restoring"] = "Restoring";
    KnownDatabaseStatus["RecoveryPending"] = "RecoveryPending";
    KnownDatabaseStatus["Recovering"] = "Recovering";
    KnownDatabaseStatus["Suspect"] = "Suspect";
    KnownDatabaseStatus["Offline"] = "Offline";
    KnownDatabaseStatus["Standby"] = "Standby";
    KnownDatabaseStatus["Shutdown"] = "Shutdown";
    KnownDatabaseStatus["EmergencyMode"] = "EmergencyMode";
    KnownDatabaseStatus["AutoClosed"] = "AutoClosed";
    KnownDatabaseStatus["Copying"] = "Copying";
    KnownDatabaseStatus["Creating"] = "Creating";
    KnownDatabaseStatus["Inaccessible"] = "Inaccessible";
    KnownDatabaseStatus["OfflineSecondary"] = "OfflineSecondary";
    KnownDatabaseStatus["Pausing"] = "Pausing";
    KnownDatabaseStatus["Paused"] = "Paused";
    KnownDatabaseStatus["Resuming"] = "Resuming";
    KnownDatabaseStatus["Scaling"] = "Scaling";
    KnownDatabaseStatus["OfflineChangingDwPerformanceTiers"] = "OfflineChangingDwPerformanceTiers";
    KnownDatabaseStatus["OnlineChangingDwPerformanceTiers"] = "OnlineChangingDwPerformanceTiers";
    KnownDatabaseStatus["Disabled"] = "Disabled";
    KnownDatabaseStatus["Stopping"] = "Stopping";
    KnownDatabaseStatus["Stopped"] = "Stopped";
    KnownDatabaseStatus["Starting"] = "Starting";
})(KnownDatabaseStatus || (KnownDatabaseStatus = {}));
/** Known values of {@link DatabaseLicenseType} that the service accepts. */
export var KnownDatabaseLicenseType;
(function (KnownDatabaseLicenseType) {
    KnownDatabaseLicenseType["LicenseIncluded"] = "LicenseIncluded";
    KnownDatabaseLicenseType["BasePrice"] = "BasePrice";
})(KnownDatabaseLicenseType || (KnownDatabaseLicenseType = {}));
/** Known values of {@link DatabaseReadScale} that the service accepts. */
export var KnownDatabaseReadScale;
(function (KnownDatabaseReadScale) {
    KnownDatabaseReadScale["Enabled"] = "Enabled";
    KnownDatabaseReadScale["Disabled"] = "Disabled";
})(KnownDatabaseReadScale || (KnownDatabaseReadScale = {}));
/** Known values of {@link SecondaryType} that the service accepts. */
export var KnownSecondaryType;
(function (KnownSecondaryType) {
    KnownSecondaryType["Geo"] = "Geo";
    KnownSecondaryType["Named"] = "Named";
})(KnownSecondaryType || (KnownSecondaryType = {}));
/** Known values of {@link BackupStorageRedundancy} that the service accepts. */
export var KnownBackupStorageRedundancy;
(function (KnownBackupStorageRedundancy) {
    KnownBackupStorageRedundancy["Geo"] = "Geo";
    KnownBackupStorageRedundancy["Local"] = "Local";
    KnownBackupStorageRedundancy["Zone"] = "Zone";
    KnownBackupStorageRedundancy["GeoZone"] = "GeoZone";
})(KnownBackupStorageRedundancy || (KnownBackupStorageRedundancy = {}));
/** Known values of {@link ReplicaType} that the service accepts. */
export var KnownReplicaType;
(function (KnownReplicaType) {
    KnownReplicaType["Primary"] = "Primary";
    KnownReplicaType["ReadableSecondary"] = "ReadableSecondary";
})(KnownReplicaType || (KnownReplicaType = {}));
/** Known values of {@link DatabaseState} that the service accepts. */
export var KnownDatabaseState;
(function (KnownDatabaseState) {
    KnownDatabaseState["All"] = "All";
    KnownDatabaseState["Live"] = "Live";
    KnownDatabaseState["Deleted"] = "Deleted";
})(KnownDatabaseState || (KnownDatabaseState = {}));
/** Known values of {@link ManagedInstancePropertiesProvisioningState} that the service accepts. */
export var KnownManagedInstancePropertiesProvisioningState;
(function (KnownManagedInstancePropertiesProvisioningState) {
    KnownManagedInstancePropertiesProvisioningState["Creating"] = "Creating";
    KnownManagedInstancePropertiesProvisioningState["Deleting"] = "Deleting";
    KnownManagedInstancePropertiesProvisioningState["Updating"] = "Updating";
    KnownManagedInstancePropertiesProvisioningState["Unknown"] = "Unknown";
    KnownManagedInstancePropertiesProvisioningState["Succeeded"] = "Succeeded";
    KnownManagedInstancePropertiesProvisioningState["Failed"] = "Failed";
    KnownManagedInstancePropertiesProvisioningState["Accepted"] = "Accepted";
    KnownManagedInstancePropertiesProvisioningState["Created"] = "Created";
    KnownManagedInstancePropertiesProvisioningState["Deleted"] = "Deleted";
    KnownManagedInstancePropertiesProvisioningState["Unrecognized"] = "Unrecognized";
    KnownManagedInstancePropertiesProvisioningState["Running"] = "Running";
    KnownManagedInstancePropertiesProvisioningState["Canceled"] = "Canceled";
    KnownManagedInstancePropertiesProvisioningState["NotSpecified"] = "NotSpecified";
    KnownManagedInstancePropertiesProvisioningState["Registering"] = "Registering";
    KnownManagedInstancePropertiesProvisioningState["TimedOut"] = "TimedOut";
})(KnownManagedInstancePropertiesProvisioningState || (KnownManagedInstancePropertiesProvisioningState = {}));
/** Known values of {@link ManagedServerCreateMode} that the service accepts. */
export var KnownManagedServerCreateMode;
(function (KnownManagedServerCreateMode) {
    KnownManagedServerCreateMode["Default"] = "Default";
    KnownManagedServerCreateMode["PointInTimeRestore"] = "PointInTimeRestore";
})(KnownManagedServerCreateMode || (KnownManagedServerCreateMode = {}));
/** Known values of {@link ManagedInstanceLicenseType} that the service accepts. */
export var KnownManagedInstanceLicenseType;
(function (KnownManagedInstanceLicenseType) {
    KnownManagedInstanceLicenseType["LicenseIncluded"] = "LicenseIncluded";
    KnownManagedInstanceLicenseType["BasePrice"] = "BasePrice";
})(KnownManagedInstanceLicenseType || (KnownManagedInstanceLicenseType = {}));
/** Known values of {@link ManagedInstanceProxyOverride} that the service accepts. */
export var KnownManagedInstanceProxyOverride;
(function (KnownManagedInstanceProxyOverride) {
    KnownManagedInstanceProxyOverride["Proxy"] = "Proxy";
    KnownManagedInstanceProxyOverride["Redirect"] = "Redirect";
    KnownManagedInstanceProxyOverride["Default"] = "Default";
})(KnownManagedInstanceProxyOverride || (KnownManagedInstanceProxyOverride = {}));
/** Known values of {@link ServicePrincipalType} that the service accepts. */
export var KnownServicePrincipalType;
(function (KnownServicePrincipalType) {
    KnownServicePrincipalType["None"] = "None";
    KnownServicePrincipalType["SystemAssigned"] = "SystemAssigned";
})(KnownServicePrincipalType || (KnownServicePrincipalType = {}));
/** Known values of {@link AggregationFunctionType} that the service accepts. */
export var KnownAggregationFunctionType;
(function (KnownAggregationFunctionType) {
    KnownAggregationFunctionType["Avg"] = "avg";
    KnownAggregationFunctionType["Min"] = "min";
    KnownAggregationFunctionType["Max"] = "max";
    KnownAggregationFunctionType["Stdev"] = "stdev";
    KnownAggregationFunctionType["Sum"] = "sum";
})(KnownAggregationFunctionType || (KnownAggregationFunctionType = {}));
/** Known values of {@link MetricType} that the service accepts. */
export var KnownMetricType;
(function (KnownMetricType) {
    KnownMetricType["Cpu"] = "cpu";
    KnownMetricType["Io"] = "io";
    KnownMetricType["LogIo"] = "logIo";
    KnownMetricType["Duration"] = "duration";
    KnownMetricType["Dtu"] = "dtu";
})(KnownMetricType || (KnownMetricType = {}));
/** Known values of {@link ConnectionPolicyName} that the service accepts. */
export var KnownConnectionPolicyName;
(function (KnownConnectionPolicyName) {
    KnownConnectionPolicyName["Default"] = "default";
})(KnownConnectionPolicyName || (KnownConnectionPolicyName = {}));
/** Known values of {@link ServerConnectionType} that the service accepts. */
export var KnownServerConnectionType;
(function (KnownServerConnectionType) {
    KnownServerConnectionType["Default"] = "Default";
    KnownServerConnectionType["Redirect"] = "Redirect";
    KnownServerConnectionType["Proxy"] = "Proxy";
})(KnownServerConnectionType || (KnownServerConnectionType = {}));
/** Known values of {@link ServiceObjectiveName} that the service accepts. */
export var KnownServiceObjectiveName;
(function (KnownServiceObjectiveName) {
    KnownServiceObjectiveName["System"] = "System";
    KnownServiceObjectiveName["System0"] = "System0";
    KnownServiceObjectiveName["System1"] = "System1";
    KnownServiceObjectiveName["System2"] = "System2";
    KnownServiceObjectiveName["System3"] = "System3";
    KnownServiceObjectiveName["System4"] = "System4";
    KnownServiceObjectiveName["System2L"] = "System2L";
    KnownServiceObjectiveName["System3L"] = "System3L";
    KnownServiceObjectiveName["System4L"] = "System4L";
    KnownServiceObjectiveName["Free"] = "Free";
    KnownServiceObjectiveName["Basic"] = "Basic";
    KnownServiceObjectiveName["S0"] = "S0";
    KnownServiceObjectiveName["S1"] = "S1";
    KnownServiceObjectiveName["S2"] = "S2";
    KnownServiceObjectiveName["S3"] = "S3";
    KnownServiceObjectiveName["S4"] = "S4";
    KnownServiceObjectiveName["S6"] = "S6";
    KnownServiceObjectiveName["S7"] = "S7";
    KnownServiceObjectiveName["S9"] = "S9";
    KnownServiceObjectiveName["S12"] = "S12";
    KnownServiceObjectiveName["P1"] = "P1";
    KnownServiceObjectiveName["P2"] = "P2";
    KnownServiceObjectiveName["P3"] = "P3";
    KnownServiceObjectiveName["P4"] = "P4";
    KnownServiceObjectiveName["P6"] = "P6";
    KnownServiceObjectiveName["P11"] = "P11";
    KnownServiceObjectiveName["P15"] = "P15";
    KnownServiceObjectiveName["PRS1"] = "PRS1";
    KnownServiceObjectiveName["PRS2"] = "PRS2";
    KnownServiceObjectiveName["PRS4"] = "PRS4";
    KnownServiceObjectiveName["PRS6"] = "PRS6";
    KnownServiceObjectiveName["DW100"] = "DW100";
    KnownServiceObjectiveName["DW200"] = "DW200";
    KnownServiceObjectiveName["DW300"] = "DW300";
    KnownServiceObjectiveName["DW400"] = "DW400";
    KnownServiceObjectiveName["DW500"] = "DW500";
    KnownServiceObjectiveName["DW600"] = "DW600";
    KnownServiceObjectiveName["DW1000"] = "DW1000";
    KnownServiceObjectiveName["DW1200"] = "DW1200";
    KnownServiceObjectiveName["DW1000C"] = "DW1000c";
    KnownServiceObjectiveName["DW1500"] = "DW1500";
    KnownServiceObjectiveName["DW1500C"] = "DW1500c";
    KnownServiceObjectiveName["DW2000"] = "DW2000";
    KnownServiceObjectiveName["DW2000C"] = "DW2000c";
    KnownServiceObjectiveName["DW3000"] = "DW3000";
    KnownServiceObjectiveName["DW2500C"] = "DW2500c";
    KnownServiceObjectiveName["DW3000C"] = "DW3000c";
    KnownServiceObjectiveName["DW6000"] = "DW6000";
    KnownServiceObjectiveName["DW5000C"] = "DW5000c";
    KnownServiceObjectiveName["DW6000C"] = "DW6000c";
    KnownServiceObjectiveName["DW7500C"] = "DW7500c";
    KnownServiceObjectiveName["DW10000C"] = "DW10000c";
    KnownServiceObjectiveName["DW15000C"] = "DW15000c";
    KnownServiceObjectiveName["DW30000C"] = "DW30000c";
    KnownServiceObjectiveName["DS100"] = "DS100";
    KnownServiceObjectiveName["DS200"] = "DS200";
    KnownServiceObjectiveName["DS300"] = "DS300";
    KnownServiceObjectiveName["DS400"] = "DS400";
    KnownServiceObjectiveName["DS500"] = "DS500";
    KnownServiceObjectiveName["DS600"] = "DS600";
    KnownServiceObjectiveName["DS1000"] = "DS1000";
    KnownServiceObjectiveName["DS1200"] = "DS1200";
    KnownServiceObjectiveName["DS1500"] = "DS1500";
    KnownServiceObjectiveName["DS2000"] = "DS2000";
    KnownServiceObjectiveName["ElasticPool"] = "ElasticPool";
})(KnownServiceObjectiveName || (KnownServiceObjectiveName = {}));
//# sourceMappingURL=index.js.map