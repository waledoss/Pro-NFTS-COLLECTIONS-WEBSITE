/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as coreClient from "@azure/core-client";
import { SubscriptionsImpl, TenantsImpl, SubscriptionOperationsImpl, OperationsImpl, AliasImpl, SubscriptionPolicyImpl, BillingAccountImpl } from "./operations";
export class SubscriptionClient extends coreClient.ServiceClient {
    /**
     * Initializes a new instance of the SubscriptionClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param options The parameter options
     */
    constructor(credentials, options) {
        if (credentials === undefined) {
            throw new Error("'credentials' cannot be null");
        }
        // Initializing default values for options
        if (!options) {
            options = {};
        }
        const defaults = {
            requestContentType: "application/json; charset=utf-8",
            credential: credentials
        };
        const packageDetails = `azsdk-js-arm-subscriptions/5.0.0`;
        const userAgentPrefix = options.userAgentOptions && options.userAgentOptions.userAgentPrefix
            ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`
            : `${packageDetails}`;
        if (!options.credentialScopes) {
            options.credentialScopes = ["https://management.azure.com/.default"];
        }
        const optionsWithDefaults = Object.assign(Object.assign(Object.assign({}, defaults), options), { userAgentOptions: {
                userAgentPrefix
            }, baseUri: options.endpoint || "https://management.azure.com" });
        super(optionsWithDefaults);
        // Assigning values to Constant parameters
        this.$host = options.$host || "https://management.azure.com";
        this.subscriptions = new SubscriptionsImpl(this);
        this.tenants = new TenantsImpl(this);
        this.subscriptionOperations = new SubscriptionOperationsImpl(this);
        this.operations = new OperationsImpl(this);
        this.alias = new AliasImpl(this);
        this.subscriptionPolicy = new SubscriptionPolicyImpl(this);
        this.billingAccount = new BillingAccountImpl(this);
    }
}
//# sourceMappingURL=subscriptionClient.js.map